swagger: "2.0"
info:
  description: "Add a Auth layer above API calls"
  version: "1.0.0"
  title: "API Slayer"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/admin/routes"
schemes:
- "http"
paths:
  /create:
    post:
      summary: A route to create new Routes.
      produces:
        - application/json
      responses:
        '200':
          description: New route data
          schema:
            $ref: '#definitions/ResponseRoutes'
        '406':
          description: New route creation not acceptable
    parameters:
      - in: body
        required: true
        description: The body of the request to create a new route
        schema:
          $ref: '#/definitions/RequestRoutes'
  # /fetch:
  #   get:
  #     summary: A route to fetch the Routes.
  /update/{id}:
    post:
      summary: A route to update the Routes.
      produces:
        - application/json
      responses:
        '200':
          description: Updated route data
          schema:
            $ref: '#definitions/ResponseRoutes'
        '406':
          description: Route update not acceptable
      consumes:
        - application/json
      parameters:
        - in: query
          name: id
          type: string
          required: true
          description: The _id of the document ID as stored in Mongo
        - in: body
          required: true
          description: The body of the modified document
          schema:
            $ref: '#/definitions/RequestRoutes'
  /delete/{id}:
    delete:
      summary: A route to delete the Routes.
      produces:
        - application/json
      responses:
        '200':
          description: Delete was successful
          schema:
            type: object
            properties:
              n:
                type: number
              ok:
                type: number
              deletedCount:
                type: number
        '406':
          description: Route deletion not acceptable
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: The _id of the document ID as stored in Mongo
  /query:
    get:
      summary: A route to get the proxy or route list in some proxy.
      produces:
        - application/json
      parameters:
        - in: query
          name: field
          type: string
          description: The information about remote_url, name, credential and policy in form of {"remote_url":"something","name":"somename","credential":"cred","policy":"some policy"} in encoded form.
        - in: query
          name: filter
          type: string
          description: The information about proxyId in form of {"proxyId":"someProxyID"} in encoded form.
      responses:
        '200':
          description: Delete was successful
          schema:
            type: object
        '406':
          description: Query not acceptable

definitions:
  RequestRoutes:
    type: object
    required:
      - name
      - base_path
      - remote_path
      - method
      - policy
    properties:
      name:
        type: string
      base_path:
        type: string
      remote_path:
        type: string
      method:
        type: string
      policy:
        type: array
        items:
          type: object
  ResponseRoutes:
    type: object
    required:
      - _id
      - name
      - base_path
      - remote_path
      - method
      - policy
    properties:
      _id:
        type: string
      name:
        type: string
      base_path:
        type: string
      remote_path:
        type: string
      method:
        type: string
      proxyId:
        type: string
      creation_date:
        type: string
      __v:
        type: number
      policy:
        type: array
        items:
          type: object